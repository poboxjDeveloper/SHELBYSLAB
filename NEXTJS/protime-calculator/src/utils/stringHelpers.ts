const verbs = [
  'is',
  'was',
  'are',
  'be',
  'have',
  'had',
  'were',
  'can',
  'said',
  'use',
  'do',
  'will',
  'would',
  'make',
  'like',
  'has',
  'look',
  'write',
  'go',
  'see',
  'could',
  'been',
  'call',
  'am',
  'find',
  'did',
  'get',
  'come',
  'made',
  'may',
  'take',
  'know',
  'live',
  'give',
  'think',
  'say',
  'help',
  'tell',
  'follow',
  'came',
  'want',
  'show',
  'set',
  'put',
  'does',
  'must',
  'ask',
  'went',
  'read',
  'need',
  'move',
  'try',
  'change',
  'play',
  'spell',
  'found',
  'study',
  'learn',
  'should',
  'add',
  'keep',
  'start',
  'thought',
  'saw',
  'turn',
  'might',
  'close',
  'seem',
  'open',
  'begin',
  'got',
  'run',
  'walk',
  'began',
  'grow',
  'took',
  'carry',
  'hear',
  'stop',
  'miss',
  'eat',
  'watch',
  'let',
  'cut',
  'talk',
  'being',
  'leave',
];
const nouns = [
  'word',
  'time',
  'number',
  'way',
  'people',
  'water',
  'day',
  'part',
  'sound',
  'work',
  'place',
  'year',
  'back',
  'thing',
  'name',
  'sentence',
  'man',
  'line',
  'boy',
  'farm',
  'end',
  'men',
  'land',
  'home',
  'hand',
  'picture',
  'air',
  'animal',
  'house',
  'page',
  'letter',
  'point',
  'mother',
  'answer',
  'America',
  'world',
  'food',
  'country',
  'plant',
  'school',
  'father',
  'tree',
  'city',
  'earth',
  'eye',
  'head',
  'story',
  'example',
  'life',
  'paper',
  'group',
  'children',
  'side',
  'feet',
  'car',
  'mile',
  'night',
  'sea',
  'river',
  'state',
  'book',
  'idea',
  'face',
  'Indian',
  'girl',
  'mountain',
  'list',
  'song',
  'family',
];
const adjectives = [
  'he',
  'a',
  'one',
  'all',
  'an',
  'each',
  'other',
  'many',
  'some',
  'two',
  'more',
  'long',
  'new',
  'little',
  'most',
  'good',
  'great',
  'right',
  'mean',
  'old',
  'any',
  'same',
  'three',
  'small',
  'another',
  'large',
  'big',
  'even',
  'such',
  'different',
  'kind',
  'still',
  'high',
  'every',
  'own',
  'light',
  'left',
  'few',
  'next',
  'hard',
  'both',
  'important',
  'white',
  'four',
  'second',
  'enough',
  'above',
  'young',
];
const adverbes = [
  'not',
  'when',
  'there',
  'how',
  'up',
  'out',
  'then',
  'so',
  'no',
  'first',
  'now',
  'only',
  'very',
  'just',
  'where',
  'much',
  'before',
  'too',
  'also',
  'around',
  'well',
  'here',
  'why',
  'again',
  'off',
  'away',
  'near',
  'below',
  'last',
  'never',
  'always',
  'together',
  'often',
  'once',
  'later',
  'far',
  'really',
  'almost',
  'sometimes',
  'soon',
];
const prepositions = [
  'of',
  'to',
  'in',
  'for',
  'on',
  'with',
  'at',
  'from',
  'by',
  'about',
  'into',
  'down',
  'over',
  'after',
  'through',
  'between',
  'under',
  'along',
  'until',
  'without',
];
const pronouns = [
  'you',
  'that',
  'it',
  'he',
  'his',
  'they',
  'I',
  'this',
  'what',
  'we',
  'your',
  'which',
  'she',
  'their',
  'them',
  'these',
  'her',
  'him',
  'my',
  'who',
  'its',
  'me',
  'our',
  'us',
  'something',
  'those',
];
const conjunctions = [
  'and',
  'as',
  'or',
  'but',
  'if',
  'than',
  'because',
  'while',
];
const contractions = ['it’s', 'don’t'];

/**
 * It returns a random string.
 * @param {number} nrOfWords - number - the number of words you want to generate
 * @returns A string of random words.
 */
export const randomString = (nrOfWords: number) => {
  let allWords = [
    ...verbs,
    ...nouns,
    ...adjectives,
    ...adverbes,
    ...prepositions,
    ...nouns,
    ...pronouns,
    ...conjunctions,
    ...contractions,
  ];

  allWords.sort((a, b) => {
    const nameA = a.toUpperCase(); // ignore upper and lowercase
    const nameB = b.toUpperCase(); // ignore upper and lowercase
    if (nameA < nameB) {
      return -1;
    }
    if (nameA > nameB) {
      return 1;
    }
    // names must be equal
    return 0;
  });

  const sentence = makeString(pickRandom(allWords, nrOfWords));
  // console.log('sentence', sentence);
  return sentence;
};

/**
 * It takes an array of words and a number of words to pick, and returns an array of words
 * @param {string[]} wordsArray - string[] - an array of strings
 * @param {number} nrOfWords - number of words to pick
 * @returns An array of strings.
 */
export const pickRandom = (
  wordsArray: string[],
  nrOfWords: number
): string[] => {
  let result = [];
  for (let index = 0; index < nrOfWords; index++) {
    let random = Math.floor(Math.random() * wordsArray.length);
    // console.log('random', random, 'word', wordsArray[random]);
    result.push(wordsArray[random]);
  }
  return result;
};

/**
 * It takes an array of strings and returns a string
 * @param {string[]} wordsArray - string[]
 * @returns A function that takes an array of strings and returns a string.
 */
export const makeString = (wordsArray: string[]): string => {
  let result = '';
  wordsArray.map((word) => (result += ' ' + word));

  return result;
};
